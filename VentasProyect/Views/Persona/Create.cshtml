@model VentasProyect.Models.Persona.Persona

@{
    ViewBag.Title = "Crear Persona";
}

@Styles.Render("~/Forms")

    <div class="container-buttom">
        <a href="@Url.Action("Index", "Persona")" class="btn btn-default btn-back">
            <span class="material-symbols-outlined">
                arrow_circle_left
            </span>
            <span class="icon-logout">Regresar</span>
        </a>
    </div>

    <div class="form-container">

        <h2>CREAR PERSONA</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()


            <div class="row-form">
                <div class="input-form p-right">
                    <div class="icon-container">
                        <span class="material-symbols-outlined">style</span>
                        @Html.DropDownListFor(model => model.per_tipo_documento, new SelectList(new[]
                        {
                            new SelectListItem { Text = "Seleccione tipo documento", Value = "Seleccione tipo documento" },
                            new SelectListItem { Text = "CC", Value = "CC" },
                            new SelectListItem { Text = "CE", Value = "CE" },
                            new SelectListItem { Text = "NIT", Value = "NIT" }
                        }, "Value", "Text"), new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.per_tipo_documento)
                </div>
                <div class="input-form p-right">
                    <div class="icon-container">
                        <span class="material-symbols-outlined">
                            id_card
                        </span>
                        @Html.TextBoxFor(model => model.per_nit, new { @class = "form-control", placeholder = "Numero de documento" })
                        @Html.ValidationMessageFor(model => model.per_nit)
                    </div>
                </div>
            </div>

            <div class="row-form">
                <div class="input-form p-right">
                    <div class="icon-container">
                        <span class="material-symbols-outlined">
                            person
                        </span>
                        @Html.TextBoxFor(model => model.per_nombre, new { @class = "form-control", @onchange = "CapitalizeText(this);ValidateEmpy(this)", placeholder = "Nombre completo" })
                        @Html.ValidationMessageFor(model => model.per_nombre)
                    </div>
                </div>
                <div class="input-form p-right">
                    <div class="icon-container">
                        <span class="material-symbols-outlined">
                            phone_enabled
                        </span>
                        @Html.TextBoxFor(model => model.per_telefono, new { @class = "form-control", placeholder = "Telefono" })
                        @Html.ValidationMessageFor(model => model.per_telefono)
                    </div>
                </div>
            </div>
            <div class="row-form">
                <div class="input-form p-right">
                    <div class="icon-container">
                        <span class="material-symbols-outlined">
                            home_pin
                        </span>
                        @Html.TextBoxFor(model => model.per_direccion, new { @class = "form-control", placeholder = "Dirección" })
                        @Html.ValidationMessageFor(model => model.per_direccion)
                    </div>
                </div>
                <div class="input-form p-right">
                    <div class="icon-container">
                        <span class="material-symbols-outlined">
                            mail
                        </span>
                        @Html.TextBoxFor(model => model.per_correo, new { @class = "form-control", placeholder = "Correo electrónico" })
                        @Html.ValidationMessageFor(model => model.per_correo)
                    </div>
                </div>
            </div>
            <div class="row-form">
                <div class="input-form p-right">
                    <div class="icon-container">
                        <span class="material-symbols-outlined">
                            user_attributes
                        </span>
                        @Html.DropDownListFor(model => model.per_tipo, new SelectList(new[]
                        {
                            new SelectListItem { Text = "Seleccione tipo cliente", Value = "Seleccione tipo cliente" },
                            new SelectListItem { Text = "Cliente", Value = "Cliente" },
                            new SelectListItem { Text = "Proveedor", Value = "Proveedor" },
                            new SelectListItem { Text = "Ambos", Value = "Ambos" }
                        }, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.per_tipo)
                    </div>
                </div>
                <div class="input-form p-right">
                    <div class="icon-container">
                        <span class="material-symbols-outlined">
                            location_city
                        </span>
                        @Html.HiddenFor(model => model.ciu_id, new { id = "ciu_id_hidden" })
                        @Html.DropDownList("ciu_idTemp", (IEnumerable<SelectListItem>)ViewBag.Ciudades, null, new { @class = "form-control", onchange = "UpdateHiddenValue(this);" })

                        @Html.ValidationMessageFor(model => model.ciu_id)
                    </div>
                </div>
            </div>
            <div class="row-form">
                <div class="input-form p-right">
                    <div class="icon-container">
                        <span class="material-symbols-outlined">
                            assured_workload
                        </span>
                        @Html.TextBoxFor(model => model.per_cuenta_bancaria, new { @class = "form-control", placeholder = "Cuenta bancaria" })
                        @Html.ValidationMessageFor(model => model.per_cuenta_bancaria)
                    </div>
                </div>
                <div class="input-form">
                    <div class="icon-container">
                        <span class="material-symbols-outlined">
                            checklist
                        </span>
                        @Html.DropDownListFor(model => model.per_tipo_cuenta, new SelectList(new[]
                   {
                            new SelectListItem { Text = "Seleccione tipo cuenta", Value = "Seleccione tipo cuenta" },
                            new SelectListItem { Text = "Ahorro", Value = "Ahorro" },
                            new SelectListItem { Text = "Corriente", Value = "Corriente" }
                        }, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.per_tipo_cuenta)
                    </div>
                </div>
            </div>
            <div class="content-button">
                <div class="container-btn">
                    <button type="submit" class="btn btn-primary">
                        GUARDAR
                        <span class="material-symbols-outlined">
                            library_add
                        </span>
                    </button>
                </div>
            </div>
        }
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/ScCreate")
    }

    <script src="~/Scripts/Generales/General.js"></script>
