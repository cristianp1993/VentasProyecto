@model VentasProyect.Models.Persona.Persona

@{
    ViewBag.Title = "Editar Persona";

    
}

@Styles.Render("~/Forms")

<div class="container-buttom">
    <a href="@Url.Action("Index", "Persona", new {type= Model.per_vista})" class="btn btn-default btn-back">
        <span class="material-symbols-outlined">
            arrow_circle_left
        </span>
        <span class="icon-logout">Regresar</span>
    </a>
</div>

<div class="form-container">

    <h2>EDITAR PERSONA</h2>

    @using (Html.BeginForm("Edit", "Persona", new { type = Model.per_vista }, FormMethod.Post))
    {

        @Html.HiddenFor(model => model.per_id)

        <div class="row-form">
            <div class="input-form p-right">
                @Html.LabelFor(model => model.per_tipo_documento)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        style
                    </span>
                    @Html.HiddenFor(model => model.per_tipo_documento, new { id = "per_tipo_documento_hidden" })
                    @Html.TextBoxFor(model => model.per_tipo_documento, new { @class = "form-control", @onchange = "CapitalizeText(this)" })
                    @Html.ValidationMessageFor(model => model.per_tipo_documento, "", new { @class = "field-validation-error" })
                </div>
            </div>
            <div class="input-form p-right">
                @Html.LabelFor(model => model.per_nit)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        id_card
                    </span>
                    @Html.TextBoxFor(model => model.per_nit, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.per_nit, "", new { @class = "field-validation-error" })
                </div>
            </div>
        </div>

        <div class="row-form">
            <div class="input-form p-right">
                @Html.LabelFor(model => model.per_nombre)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        person
                    </span>
                    @Html.TextBoxFor(model => model.per_nombre, new { @class = "form-control", @onchange = "CapitalizeText(this)" })
                    @Html.ValidationMessageFor(model => model.per_nombre, "", new { @class = "field-validation-error" })
                </div>
            </div>
            <div class="input-form p-right">
                @Html.LabelFor(model => model.per_telefono)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        phone_enabled
                    </span>
                    @Html.TextBoxFor(model => model.per_telefono, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.per_telefono, "", new { @class = "field-validation-error" })
                </div>
            </div>
        </div>

        <div class="row-form">
            <div class="input-form p-right">
                @Html.LabelFor(model => model.per_direccion)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        home_pin
                    </span>
                    @Html.TextBoxFor(model => model.per_direccion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.per_direccion, "", new { @class = "field-validation-error" })
                </div>
            </div>
            <div class="input-form p-right">
                @Html.LabelFor(model => model.per_correo)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        mail
                    </span>
                    @Html.TextBoxFor(model => model.per_correo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.per_correo, "", new { @class = "field-validation-error" })
                </div>
            </div>
        </div>

        <div class="row-form">
            <div class="input-form p-right">
                @Html.LabelFor(model => model.per_tipo)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        user_attributes
                    </span>
                    @Html.TextBoxFor(model => model.per_tipo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.per_tipo, "", new { @class = "field-validation-error" })
                </div>
            </div>
            <div class="input-form p-right">
                @Html.LabelFor(model => model.ciu_id)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        location_city
                    </span>
                    @Html.HiddenFor(model => model.ciu_id, new { id = "ciu_id_hidden" })
                    @Html.DropDownList("ciu_idTemp", (IEnumerable<SelectListItem>)ViewBag.Ciudades, new { @class = "form-control", onchange = "UpdateHiddenValue(this);" })
                    @Html.ValidationMessageFor(model => model.ciu_id, "", new { @class = "field-validation-error" })
                </div>
            </div>
        </div>

        <div class="row-form">
            <div class="input-form p-right">
                @Html.LabelFor(model => model.per_cuenta_bancaria)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        assured_workload
                    </span>
                    @Html.TextBoxFor(model => model.per_cuenta_bancaria, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.per_cuenta_bancaria, "", new { @class = "field-validation-error" })
                </div>
            </div>
            <div class="input-form p-right">
                @Html.LabelFor(model => model.per_tipo_cuenta)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        checklist
                    </span>
                    @Html.TextBoxFor(model => model.per_tipo_cuenta, new { @class = "form-control", @onchange = "CapitalizeText(this)" })
                    @Html.ValidationMessageFor(model => model.per_tipo_cuenta, "", new { @class = "field-validation-error" })
                </div>
            </div>
        </div>
        <div class="content-button">
            <div class="container-btn">
                <button type="submit" class="btn btn-primary">
                    GUARDAR
                    <span class="material-symbols-outlined">
                        source_notes
                    </span>
                </button>
            </div>
        </div>
    }

</div>


    <script src="~/Scripts/Generales/General.js"></script>
    <script src="~/Scripts/Persona/Persona.js"></script>

