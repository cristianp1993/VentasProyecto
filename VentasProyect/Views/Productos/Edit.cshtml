@model VentasProyect.Models.Productos.Productos

@{
    ViewBag.Title = "Editar Producto";

    
}

@Styles.Render("~/Forms")

<div class="container-buttom">
    <a href="@Url.Action("Index", "Productos")" class="btn btn-default btn-back">
        <span class="material-symbols-outlined">
            arrow_circle_left
        </span>
        <span class="icon-logout">Regresar</span>
    </a>
</div>

<div class="form-container">

    <h2>EDITAR PRODUCTO</h2>

    @using (Html.BeginForm("Edit", "Productos", FormMethod.Post))
    {

        @Html.HiddenFor(model => model.pro_id)

        <div class="row-form">
            <div class="input-form p-right">
                @Html.LabelFor(model => model.pro_nombre)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        package_2
                    </span>
                    @Html.TextBoxFor(model => model.pro_nombre, new { @class = "form-control", @onchange = "CapitalizeText(this)" })
                    @Html.ValidationMessageFor(model => model.pro_nombre, "", new { @class = "field-validation-error" })
                </div>
            </div>
        </div>
        <div class="row-form description">
            <div class="input-form p-right">
                @Html.LabelFor(model => model.pro_descripcion)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        article
                    </span>
                    @Html.TextAreaFor(model => model.pro_descripcion, new { @class = "form-control", rows = 2 })
                    @Html.ValidationMessageFor(model => model.pro_descripcion, "", new { @class = "field-validation-error" })
                </div>
            </div>
        </div>

        <div class="row-form">
            <div class="input-form p-right">
                @Html.LabelFor(model => model.pro_stock)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        inventory
                    </span>
                    @Html.TextBoxFor(model => model.pro_stock, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.pro_stock, "", new { @class = "field-validation-error" })
                </div>
            </div>
            <div class="input-form p-right">
                @Html.LabelFor(model => model.pro_valor_unitario)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        request_quote
                    </span>
                    @Html.TextBoxFor(model => model.pro_valor_unitario, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.pro_valor_unitario, "", new { @class = "field-validation-error" })
                </div>
            </div>

        </div>

        <div class="row-form">
            <div class="input-form p-right">
                @Html.LabelFor(model => model.pro_estado)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        gpp_maybe
                    </span>
                    @Html.DropDownListFor(model => model.pro_estado, new SelectList(ViewBag.Estados, "Value", "Text", Model.pro_estado), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.pro_estado, "", new { @class = "field-validation-error" })
                </div>
            </div>
            <div class="input-form p-right">
                @Html.LabelFor(model => model.pro_url_img)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        add_photo_alternate
                    </span>
                    @Html.TextBoxFor(model => model.pro_url_img, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.pro_url_img, "", new { @class = "field-validation-error" })
                </div>
            </div>
        </div>

        <div class="row-form">
            <div class="input-form p-right">
                @Html.LabelFor(model => model.cat_id)
                <div class="icon-container">
                    <span class="material-symbols-outlined">
                        category
                    </span>
                    @Html.DropDownListFor(model => model.cat_id, (IEnumerable<SelectListItem>)ViewBag.Categorias, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.cat_id, "", new { @class = "field-validation-error" })
                </div>
            </div>
        </div>

        <div class="content-button">
            <div class="container-btn">
                <button type="submit" class="btn btn-primary">
                    GUARDAR
                    <span class="material-symbols-outlined">
                        source_notes
                    </span>
                </button>
            </div>
        </div>
    }

</div>


    <script src="~/Scripts/Generales/General.js"></script>

